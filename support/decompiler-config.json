{
    "decompParams": {
        "verboseOut": false,
        "keepAllFuncs": false,
        "selectedDecodeOnly": false,
        "ordinalNumDirectory": "./support/x86/ords/",
        "staticSignPaths": [
            "./support/generic/yara_patterns/static-code/"
        ],
        "libraryTypeInfoPaths": [
            "./support/generic/types/arm.json",
            "./support/generic/types/cstdlib.json",
            "./support/generic/types/linux.json",
            "./support/generic/types/windows.json",
            "./support/generic/types/windrivers.json"
        ],
        "llvmPasses" : [
            "provider-init",
            "decoder",
            "verify",
            "x86-addr-spaces",
            "x87-fpu",
            "main-detection",
            "idioms-libgcc",
            "inst-opt",
            "cond-branch-opt",
            "syscalls",
            "stack",
            "constants",
            "param-return",
            "inst-opt-rda",
            "inst-opt",
            "simple-types",
            "write-dsm",
            "remove-asm-instrs",
            "class-hierarchy",
            "select-fncs",
            "unreachable-funcs",
            "inst-opt",
            "register-localization",
            "value-protect",
            "instcombine",
            "tbaa",
            "basicaa",
            "simplifycfg",
            "early-cse",
            "tbaa",
            "basicaa",
            "globalopt",
            "mem2reg",
            "instcombine",
            "simplifycfg",
            "early-cse",
            "lazy-value-info",
            "jump-threading",
            "correlated-propagation",
            "simplifycfg",
            "instcombine",
            "simplifycfg",
            "reassociate",
            "loops",
            "loop-simplify",
            "lcssa",
            "loop-rotate",
            "licm",
            "lcssa",
            "instcombine",
            "loop-simplifycfg",
            "loop-simplify",
            "aa",
            "loop-accesses",
            "loop-load-elim",
            "lcssa",
            "indvars",
            "loop-idiom",
            "loop-deletion",
            "gvn",
            "sccp",
            "instcombine",
            "lazy-value-info",
            "jump-threading",
            "correlated-propagation",
            "dse",
            "bdce",
            "adce",
            "simplifycfg",
            "instcombine",
            "strip-dead-prototypes",
            "globaldce",
            "constmerge",
            "constprop",
            "instcombine",
            "instcombine",
            "tbaa",
            "basicaa",
            "simplifycfg",
            "early-cse",
            "tbaa",
            "basicaa",
            "globalopt",
            "mem2reg",
            "instcombine",
            "simplifycfg",
            "early-cse",
            "lazy-value-info",
            "jump-threading",
            "correlated-propagation",
            "simplifycfg",
            "instcombine",
            "simplifycfg",
            "reassociate",
            "loops",
            "loop-simplify",
            "lcssa",
            "loop-rotate",
            "licm",
            "lcssa",
            "instcombine",
            "loop-simplifycfg",
            "loop-simplify",
            "aa",
            "loop-accesses",
            "loop-load-elim",
            "lcssa",
            "indvars",
            "loop-idiom",
            "loop-deletion",
            "gvn",
            "sccp",
            "instcombine",
            "lazy-value-info",
            "jump-threading",
            "correlated-propagation",
            "dse",
            "bdce",
            "adce",
            "simplifycfg",
            "instcombine",
            "strip-dead-prototypes",
            "globaldce",
            "constmerge",
            "constprop",
            "instcombine",
            "inst-opt",
            "simple-types",
            "stack-ptr-op-remove",
            "idioms",
            "instcombine",
            "inst-opt",
            "idioms",
            "remove-phi",
            "value-protect",
            "sink",
            "verify",
            "write-ll",
            "write-bc",
            "loops",
            "scalar-evolution",
            "llvmir2hll"
        ]
    }
}
