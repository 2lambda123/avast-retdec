# TLSH is provided for use under two licenses: Apache OR BSD.
# Users may opt to use either license depending on the license
# restictions of the systems with which they plan to integrate
# the TLSH code.
#
# ==============
# Apache License
# ==============
# Copyright 2013 Trend Micro Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ===========
# BSD License
# ===========
# Copyright (c) 2013, Trend Micro Incorporated
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.

set(TLSH_VERSION_MAJOR 4)
set(TLSH_VERSION_MINOR 2)
set(TLSH_VERSION_PATCH 1)

# TLSH uses only half the counting buckets.
# It can use all the buckets now.
set(TLSH_BUCKETS_128 1)
if(TLSH_BUCKETS_48 EQUAL 1)
  set(TLSH_HASH "min hash")
  add_definitions(-DBUCKETS_48)
endif()
if(TLSH_BUCKETS_128 EQUAL 1)
  set(TLSH_HASH "compact hash")
  add_definitions(-DBUCKETS_128)
endif()
if(TLSH_BUCKETS_256 EQUAL 1)
  set(TLSH_HASH "full hash")
  add_definitions(-DBUCKETS_256)
endif()

# TLSH uses 1 byte checksum. The collision rate is 1 in 24.
# It can use 3 bytes checksum now. That collision rate in 1 in 5800.
set(TLSH_CHECKSUM_1B 1)

if(TLSH_CHECKSUM_0B EQUAL 1)
  set(TLSH_CHECKSUM "no checksum")
  add_definitions(-DCHECKSUM_0B)
endif()
if(TLSH_CHECKSUM_1B EQUAL 1)
  set(TLSH_CHECKSUM "1 byte checksum")
endif()
if(TLSH_CHECKSUM_3B EQUAL 1)
  set(TLSH_CHECKSUM "3 bytes checksum")
  add_definitions(-DCHECKSUM_3B)
endif()

# setting TLSH_DISTANCE_PARAMETERS to 1 allows you to set command line arguments
# to set - and hence experiment with the distance parameters
#	by default this is zero
set(TLSH_DISTANCE_PARAMETERS 0)

# write a file with the VERSION information
file(REMOVE VERSION)
file(WRITE VERSION 
  "// This file is generated by cmake.  Modify\n"
  "// CMakeLists.txt to change the VERSION numbers\n"
  "TLSH version: ${TLSH_VERSION_MAJOR}.${TLSH_VERSION_MINOR}.${TLSH_VERSION_PATCH} ${TLSH_HASH}, ${TLSH_CHECKSUM}\n")
  
file(REMOVE include/tlsh/version.h)
file(WRITE include/tlsh/version.h
  "/****************************************************\n"
  " * This file is generated by cmake.  Modify the top\n"
  " * level CMakeLists.txt to change the VERSION numbers\n"
  " ****************************************************/\n\n"
  "#define VERSION_MAJOR ${TLSH_VERSION_MAJOR}\n"
  "#define VERSION_MINOR ${TLSH_VERSION_MINOR}\n"
  "#define VERSION_PATCH ${TLSH_VERSION_PATCH}\n"
  "#define TLSH_HASH \"${TLSH_HASH}\"\n"
  "#define TLSH_CHECKSUM \"${TLSH_CHECKSUM}\"\n")
if(TLSH_DISTANCE_PARAMETERS EQUAL 1)
file(APPEND include/tlsh/version.h
  "#define TLSH_DISTANCE_PARAMETERS ${TLSH_DISTANCE_PARAMETERS}\n")
endif()

set(TLSH_SRCS tlsh.cpp tlsh_impl.cpp tlsh_util.cpp)

add_library(tlsh STATIC ${TLSH_SRCS})
add_library(retdec::deps::tlsh ALIAS tlsh)

target_include_directories(tlsh
	SYSTEM INTERFACE
		$<BUILD_INTERFACE:${RETDEC_DEPS_DIR}/tlsh/include>
		$<INSTALL_INTERFACE:${RETDEC_INSTALL_DEPS_INCLUDE_DIR}>
	PRIVATE
		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/tlsh>
)


# set_target_properties(tlsh PROPERTIES OUTPUT_NAME "retdec-tlsh")
if(MSVC)
	add_compile_definitions(WINDOWS TLSH_EXPORTS TLSH_LIB)
endif()

# Install includes.
install(
	DIRECTORY ${RETDEC_DEPS_DIR}/tlsh/include/
	DESTINATION ${RETDEC_INSTALL_DEPS_INCLUDE_DIR}
)

# Install libs.
install(TARGETS tlsh
	EXPORT tlsh-targets
	ARCHIVE DESTINATION ${RETDEC_INSTALL_LIB_DIR}
	LIBRARY DESTINATION ${RETDEC_INSTALL_LIB_DIR}
)

# Export targets.
install(EXPORT tlsh-targets
	FILE "retdec-tlsh-targets.cmake"
	NAMESPACE retdec::deps::
	DESTINATION ${RETDEC_INSTALL_CMAKE_DIR}
)

# Install CMake files.
install(
	FILES
		"${CMAKE_CURRENT_LIST_DIR}/retdec-tlsh-config.cmake"
	DESTINATION
		"${RETDEC_INSTALL_CMAKE_DIR}"
)